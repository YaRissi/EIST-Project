plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.12'

}

group = 'de.tum.insertteamnamehere'
version = '1.0.0'
sourceCompatibility = '17'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}
configurations {
    serverImplementation.extendsFrom(implementation)
    clientImplementation.extendsFrom(implementation)
}

dependencies {

    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    serverImplementation 'org.springframework.boot:spring-boot-starter-web'

    clientImplementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-test')


}

javafx {
    version = '17.0.2'
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.media' ]
    configuration = 'clientImplementation'
}

sourceSets {

    common {
        java {
            srcDir 'src/common/java'
        }

    }
    client {
        java {
            srcDir 'src/client/java'
        }
        resources {
            srcDir 'src/client/resources'
        }
        compileClasspath += common.output
        runtimeClasspath += common.output

    }
    server {
        java {
            srcDir 'src/reservationsystem/server/java'
        }
        resources {
            srcDir 'src/reservationsystem/server/resources'
        }
        compileClasspath += common.output
        runtimeClasspath += common.output

    }


    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            'src/test/resources'
        }
    }
}

processServerResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

